{
  "name": "Manga Translation Final Second",
  "nodes": [
    {
      "parameters": {
        "operation": "Convert from PDF",
        "url": "={{ $json.link.url }}",
        "convertType": "toPng",
        "advancedOptions_Image": {
          "name": "Manga Panel",
          "expiration": 60,
          "httpusername": "test",
          "httppassword": "test"
        }
      },
      "type": "n8n-nodes-pdfco.PDFco Api",
      "typeVersion": 1,
      "position": [
        80,
        256
      ],
      "id": "5fd79b9c-93a2-4bc1-92e3-0039e11908fd",
      "name": "PDF to PNG with PDFco",
      "credentials": {
        "pdfcoApi": {
          "id": "TO9k5esvthoczsfL",
          "name": "PDF.co account Anouar Trial"
        }
      }
    },
    {
      "parameters": {
        "content": "## Convert PDF to PNG\n",
        "height": 496,
        "width": 1232,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -272,
        -80
      ],
      "id": "26b5c38e-0319-408d-8a87-c128269d80ce",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Extract the original text from the image using the original characters. Don't explain anything or add additional comments only the raw text excluding any signs only include punctuation. Exclude spaces before line breaks.",
        "imageUrls": "={{ $json.URL }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1424,
        256
      ],
      "id": "fa891e4e-2172-42b6-835d-0d663f6684bf",
      "name": "Analyze image",
      "credentials": {
        "openAiApi": {
          "id": "plDagcVpWnhYLV4h",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Translate to english. {{ $json.content }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1648,
        144
      ],
      "id": "4d766d37-1ac1-4d57-8a0a-e85d5a507952",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "L81WNWnbZDFLVNhv",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2224,
        256
      ],
      "id": "fd457c99-1a35-4e54-af3a-303245ca78e2",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node (Function) — splits a multiline string into an array\n\nconst out = [];\n\nfor (const item of items) {\n  const raw =\n    item.json.text ??\n    item.json.data ??\n    item.json.input ??\n    '';\n\n  const s = $input.first().json.message.content;\n\n  // Normalize: convert CRLF to LF and turn literal \"\\n\" into real newlines\n  const normalized = s.replace(/\\r\\n/g, '\\n').replace(/\\\\n/g, '\\n');\n\n  // Split into lines; keep all lines, drop only completely empty ones\n  const lines = normalized.split('\\n').filter(line => line !== '');\n\n  out.push({ json: { lines } });\n}\n\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2000,
        144
      ],
      "id": "0892281f-ce5b-4888-b9dd-6a926d8e6203",
      "name": "Target Language"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code node (Function) — splits a multiline string into an array\n\nconst out = [];\n\nfor (const item of items) {\n  const raw =\n    item.json.text ??\n    item.json.data ??\n    item.json.input ??\n    '';\n\n  const s = $input.first().json.content;\n\n  // Normalize: convert CRLF to LF and turn literal \"\\n\" into real newlines\n  const normalized = s.replace(/\\r\\n/g, '\\n').replace(/\\\\n/g, '\\n');\n\n  // Split into lines; keep all lines, drop only completely empty ones\n  const linesOriginal = normalized.split('\\n').filter(line => line !== '');\n\n  out.push({ json: { linesOriginal } });\n}\n\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2000,
        336
      ],
      "id": "1a81045d-cd37-4e1e-b9b3-bd90acdad28c",
      "name": "Original Language"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.bfl.ai/v1/flux-kontext-pro",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "=x-key",
              "value": "efb00034-3637-4641-9531-656eaa49c3bf"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "prompt",
              "value": "={{ $json.prompt }}"
            },
            {
              "name": "input_image",
              "value": "={{ $('Get row(s) in sheet').item.json.URL }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3344,
        256
      ],
      "id": "5c70e4f9-393d-4552-a012-b7bd3d667557",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "formTitle": "Manga Translation",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Manga Page PDF Upload",
              "fieldType": "file",
              "multipleFiles": false,
              "acceptFileTypes": ".pdf"
            },
            {
              "fieldLabel": "Target Language",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "English"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.3,
      "position": [
        -368,
        256
      ],
      "id": "0a8d3caa-2f22-4e83-abe8-c1d526b5fdc0",
      "name": "On form submission",
      "webhookId": "9a232874-94c5-414a-9616-920f9e828db9",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.superchat.com/v1.0/files",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "af0abb18-b464-426a-b554-c96e00577ce8"
            },
            {
              "name": "content-type",
              "value": "multipart/form-data"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "Image",
              "inputDataFieldName": "Manga_Page_PDF_Upload"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -144,
        256
      ],
      "id": "3efbb023-01ee-4c49-8976-8628b8aa919c",
      "name": "File Upload",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "content": "## n8n Form Trigger",
        "height": 496,
        "width": 336
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -496,
        -80
      ],
      "typeVersion": 1,
      "id": "b710bdc6-7585-4873-be8e-6506eb0aa9b4",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "springer.anouar@gmail.com_mkUiUuTXdhSv2Qd3N0zMNrvvtvB4TxxQmgygFSpTUJyDBdXmsvYj6ZYJbStRxquR"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        304,
        256
      ],
      "id": "5a2acd3f-0dfd-4e74-9be1-50c578637d8f",
      "name": "Get Image URL from JSOn Array"
    },
    {
      "parameters": {
        "url": "={{ $json }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "image/png"
            },
            {
              "name": "x-api-key",
              "value": "springer.anouar@gmail.com_mkUiUuTXdhSv2Qd3N0zMNrvvtvB4TxxQmgygFSpTUJyDBdXmsvYj6ZYJbStRxquR"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "httpusername",
              "value": "test"
            },
            {
              "name": "httppassword\t",
              "value": "test"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        528,
        256
      ],
      "id": "16b079a9-cea8-4dc3-aa02-b9a702e049b4",
      "name": "Download Manga Page .png"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.superchat.com/v1.0/files",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "af0abb18-b464-426a-b554-c96e00577ce8"
            },
            {
              "name": "content-type",
              "value": "multipart/form-data"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "data",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        752,
        256
      ],
      "id": "fbe1d30c-5b58-496d-ae56-6b94a3319d7f",
      "name": "Upload .png to get URL"
    },
    {
      "parameters": {
        "content": "## Get Copy and translate\n",
        "height": 656,
        "width": 1408,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        944,
        -176
      ],
      "id": "86b7f5a1-ac78-4871-a71c-8973d9ff4b05",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "const lines = $input.first().json.lines || [];\nconst linesOriginal = $input.last().json.linesOriginal || [];\n\nconst merged = lines.map((line, i) => ({\n  lines: line.trim(),\n  linesOriginal: (linesOriginal[i] || \"\").trim()\n}));\n\nreturn merged;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2448,
        256
      ],
      "id": "107a1b1c-c4e5-4e57-9f50-cf020af39328",
      "name": "Code1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2672,
        256
      ],
      "id": "d1dc42a3-4b16-4e7c-b3db-6e40291af6e9",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"prompt\": \"You are translating a series of lines in an original comic. Replace the original Japanese text with the corresponding English translation. Go line by line and do not reinterpret or alter anything else. Keep the background unchanged and preserve the style of the image. Here are the explicit replacements:\\n\\nReplace {{ $('Loop Over Items').item.json.linesOriginal }} with {{ $('Loop Over Items').item.json.lines }}.\\n\\nGo and exchange each of the lines in the image while keeping everything else exactly the same.\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3120,
        256
      ],
      "id": "845f98d6-2886-4c8a-be7e-17bdb3d974e8",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3568,
        256
      ],
      "id": "7be33e5c-6172-4742-a456-fef4016d695d",
      "name": "Wait",
      "webhookId": "e2cd465d-4254-42dd-a3d2-5a32617b4e5f"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"url\": \"{{ $json.link.url }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        976,
        256
      ],
      "id": "ac46833a-6d6c-4a6e-abb6-6408ecb9c2c7",
      "name": "URL"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I",
          "mode": "list",
          "cachedResultName": "URL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Id": "123",
            "URL": "={{ $json.result.sample }}"
          },
          "matchingColumns": [
            "Id"
          ],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        4016,
        256
      ],
      "id": "e49d5a17-cbca-43df-bfdc-a84242bdf46a",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "lEGtcOIZ33tkZ3M6",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.polling_url }}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3792,
        256
      ],
      "id": "20a3be57-d98d-4d04-922c-8505b69c6b26",
      "name": "Download File"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I",
          "mode": "list",
          "cachedResultName": "URL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Id",
              "lookupValue": "123"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        2896,
        256
      ],
      "id": "b3626ecc-2fff-49aa-a6a3-a0aac2dd4422",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "lEGtcOIZ33tkZ3M6",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I",
          "mode": "list",
          "cachedResultName": "URL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Id",
              "lookupValue": "123"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        2896,
        64
      ],
      "id": "8a2dddad-45df-48a2-bb10-b64e7f44c1e6",
      "name": "Get row(s) in sheet1",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "lEGtcOIZ33tkZ3M6",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I",
          "mode": "list",
          "cachedResultName": "URL",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1dxEhlt18mTEXaIXQ2l5sytMEseuwU52edFnKGpVx81I/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Id": "=123",
            "URL": "={{ $('Upload .png to get URL').item.json.link.url }}"
          },
          "matchingColumns": [
            "Id"
          ],
          "schema": [
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "URL",
              "displayName": "URL",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1200,
        256
      ],
      "id": "a1aeead0-0708-4d29-a27f-e3f60d880562",
      "name": "Update row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "lEGtcOIZ33tkZ3M6",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4240,
        336
      ],
      "id": "38fe424b-26b7-480e-a8df-170d7187280f",
      "name": "Wait1",
      "webhookId": "9891f496-d347-473f-be74-93a2e38af491"
    },
    {
      "parameters": {
        "content": "## Iterate over the speech bubbles and upload\n",
        "height": 768,
        "width": 2032,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2384,
        -160
      ],
      "id": "c446acc7-88e4-4829-ab20-39ff61aa53f7",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.superchat.com/v1.0/files",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-KEY",
              "value": "af0abb18-b464-426a-b554-c96e00577ce8"
            },
            {
              "name": "content-type",
              "value": "multipart/form-data"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "data",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3440,
        32
      ],
      "id": "f90f3b94-eddc-4b4b-a115-ee6f0a7a8abb",
      "name": "Upload .png"
    },
    {
      "parameters": {
        "url": "={{ $json.URL }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "image/png"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3120,
        64
      ],
      "id": "a35d2814-341c-49ce-97d9-7be8c49da385",
      "name": "Download Image to Binary"
    }
  ],
  "pinData": {},
  "connections": {
    "PDF to PNG with PDFco": {
      "main": [
        [
          {
            "node": "Get Image URL from JSOn Array",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          },
          {
            "node": "Original Language",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Target Language",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Target Language": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Original Language": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "File Upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Upload": {
      "main": [
        [
          {
            "node": "PDF to PNG with PDFco",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Image URL from JSOn Array": {
      "main": [
        [
          {
            "node": "Download Manga Page .png",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Manga Page .png": {
      "main": [
        [
          {
            "node": "Upload .png to get URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload .png to get URL": {
      "main": [
        [
          {
            "node": "URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "URL": {
      "main": [
        [
          {
            "node": "Update row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet1": {
      "main": [
        [
          {
            "node": "Download Image to Binary",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet1": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image to Binary": {
      "main": [
        [
          {
            "node": "Upload .png",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "677b04a6-34bc-4a43-a551-0cbcde11d2a9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "540c3094aed053292f4a5a525794d76baf60fc96380f286f281810a1e500ab20"
  },
  "id": "TcUQhkK9dOuMBznP",
  "tags": []
}